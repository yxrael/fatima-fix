"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.User = exports.Comment = exports.Attachment = exports.Label = exports.Section = exports.Project = exports.Task = exports.Duration = exports.DueDate = exports.Int = void 0;
var runtypes_1 = require("runtypes");
exports.Int = runtypes_1.Number.withConstraint(function (n) { return Number.isInteger(n) || "".concat(n, " is not a valid entity id. Should be a string"); });
exports.DueDate = (0, runtypes_1.Record)({
    isRecurring: runtypes_1.Boolean,
    string: runtypes_1.String,
    date: runtypes_1.String,
}).And((0, runtypes_1.Partial)({
    datetime: runtypes_1.String.Or(runtypes_1.Null),
    timezone: runtypes_1.String.Or(runtypes_1.Null),
    lang: runtypes_1.String.Or(runtypes_1.Null),
}));
exports.Duration = (0, runtypes_1.Record)({
    amount: runtypes_1.Number.withConstraint(function (n) { return n > 0 || 'Value should be greater than zero'; }),
    unit: (0, runtypes_1.Union)((0, runtypes_1.Literal)('minute'), (0, runtypes_1.Literal)('day')),
});
exports.Task = (0, runtypes_1.Record)({
    id: runtypes_1.String,
    order: exports.Int,
    content: runtypes_1.String,
    description: runtypes_1.String,
    projectId: runtypes_1.String,
    isCompleted: runtypes_1.Boolean,
    labels: (0, runtypes_1.Array)(runtypes_1.String),
    priority: exports.Int,
    commentCount: exports.Int,
    createdAt: runtypes_1.String,
    url: runtypes_1.String,
    creatorId: runtypes_1.String,
}).And((0, runtypes_1.Partial)({
    due: exports.DueDate.Or(runtypes_1.Null),
    duration: exports.Duration.Or(runtypes_1.Null),
    assigneeId: runtypes_1.String.Or(runtypes_1.Null),
    assignerId: runtypes_1.String.Or(runtypes_1.Null),
    parentId: runtypes_1.String.Or(runtypes_1.Null),
    sectionId: runtypes_1.String.Or(runtypes_1.Null),
}));
exports.Project = (0, runtypes_1.Record)({
    id: runtypes_1.String,
    name: runtypes_1.String,
    color: runtypes_1.String,
    commentCount: exports.Int,
    isShared: runtypes_1.Boolean,
    isFavorite: runtypes_1.Boolean,
    url: runtypes_1.String,
    isInboxProject: runtypes_1.Boolean,
    isTeamInbox: runtypes_1.Boolean,
    order: exports.Int,
    viewStyle: runtypes_1.String,
}).And((0, runtypes_1.Partial)({
    parentId: runtypes_1.String.Or(runtypes_1.Null),
}));
exports.Section = (0, runtypes_1.Record)({
    id: runtypes_1.String,
    order: exports.Int,
    name: runtypes_1.String,
    projectId: runtypes_1.String,
});
exports.Label = (0, runtypes_1.Record)({
    id: runtypes_1.String,
    order: exports.Int,
    name: runtypes_1.String,
    color: runtypes_1.String,
    isFavorite: runtypes_1.Boolean,
});
exports.Attachment = (0, runtypes_1.Record)({
    resourceType: runtypes_1.String,
}).And((0, runtypes_1.Partial)({
    fileName: runtypes_1.String.Or(runtypes_1.Null),
    fileSize: exports.Int.Or(runtypes_1.Null),
    fileType: runtypes_1.String.Or(runtypes_1.Null),
    fileUrl: runtypes_1.String.Or(runtypes_1.Null),
    fileDuration: exports.Int.Or(runtypes_1.Null),
    uploadState: (0, runtypes_1.Union)((0, runtypes_1.Literal)('pending'), (0, runtypes_1.Literal)('completed')).Or(runtypes_1.Null),
    image: runtypes_1.String.Or(runtypes_1.Null),
    imageWidth: exports.Int.Or(runtypes_1.Null),
    imageHeight: exports.Int.Or(runtypes_1.Null),
    url: runtypes_1.String.Or(runtypes_1.Null),
    title: runtypes_1.String.Or(runtypes_1.Null),
}));
exports.Comment = (0, runtypes_1.Record)({
    id: runtypes_1.String,
    content: runtypes_1.String,
    postedAt: runtypes_1.String,
}).And((0, runtypes_1.Partial)({
    taskId: runtypes_1.String.Or(runtypes_1.Null),
    projectId: runtypes_1.String.Or(runtypes_1.Null),
    attachment: exports.Attachment.Or(runtypes_1.Null),
}));
exports.User = (0, runtypes_1.Record)({
    id: runtypes_1.String,
    name: runtypes_1.String,
    email: runtypes_1.String,
});
